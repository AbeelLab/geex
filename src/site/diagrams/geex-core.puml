@startuml
class App extends javafx.application.Application {
    {static} # FRAME_WIDTH : int
    {static} # FRAME_HEIGHT : int

    {static} +main(args : String...)
}

class Window

class Breadcrumb {
    mainController : MainController
    viewList : ObservableList<ViewController>

    +update()
}

class DrawableEdge
class BaseLabel {
    {static}+BASE_HEIGHT : int
}
abstract class AbstractLabel {
    +init()
    +currentColumn() : int
}
class DrawableNodeLabel extends AbstractLabel {
    node : Node
    {static}+LABEL_WIDTH : int

    +init()
    -initMainLabel() : Label
    -initBaseLabels() : Group
}
class DrawableGraphNodeLabel extends AbstractLabel {
    +node : GraphNode
    -init()
    -initMainLabel() : Label
}
class NewickLabel extends javafx.scene.control.Label {
    node : Node

    +setEvents()
    +setSelectedClass(oldValue : Selection, newValue : Selection)
}

abstract class AbstractController<T extends Parent> implements javafx.fxml.Initializable {
    root : T
    -visibilityProperty : BooleanProperty
    #loadFXML(fxmlFile : String)
}
abstract class ViewController<T extends Parent> extends AbstractController {
    showInBreadcrumb : boolen
    activeProperty : boolean
    +{abstract}getBreadcrumbName() : String
}
abstract class AbstractGraphController<AnchorPane> extends ViewController {
    mainController : MainController

    +getGraphList() : LinkedList<StackGraph>
    #showGraph(drawableGraph : DrawableGraph)
    -initOnTheFlyLoading(nodeList : List<InfoLabel>)
    -showCurrentLabels(map : Map<Integer, List<InfoLabel>>)
}
class GraphController extends AbstractGraphController {
    sources : Set<String>
    selectedSources : Set<String>
    selectNewickController : SelectNewickController

    -initMenu()
    -loadGraph(graphMap : GraphMap)
    -loadAnnotation(codingSequenceMap : AnnotationMap)
    -loadResistance(resistanceMap : ResistanceMap)
    +updateSelectedSources(sources : Set<String>)

}
class MainController<Stackpane> extends AbstractController {
    viewList : ObservableList<ViewController>
    -workspace : Workspace
    messageController : MessageController
    overlayController : OverlayController
    newickLifted : boolean
    menuController : MenuController
    lastTopView : ViewController

    +toggleOverlay()
    +setBaseView(viewController : ViewController)
    +setView(on : ViewController, viewController : ViewController)
    +previousView()
    +toView(viewController : ViewController)
    +topView() : ViewController
    +activateView()
    +toggleNewick()
    +exitProgram()
    +displayMessage(text : String)
}
class BaseController<ScrollPane> extends ViewController {
    -graph : Graph
    -node : Node
}
class MessageController<VBox> extends AbstractController {
    +displayMessage(text : String)
}
class MenuController {
    mainController : MainController
    menuBar : MenuBar
    loadGenomeGraph : MenuItem
    toggleOverlay : MenuItem
    toggleSelect : MenuItem
    zoomIn : MenuItem
    zoomOut : MenuItem
    welcomeMenuItem : MenuItem

    +initFileMenu()
    +initNavigateMenu()
    +initHelpMenu()

    -createMenu(title : String, menuItems : MenuItem...) : Menu
    -createMenuItem(
}
abstract class AbstractNewickController<ScrollPane> extends ViewController {
    #showTree(newick : Newick)
}
class NewickController extends AbstractNewickController {
    mainController : MainController
    selection : Set<String>
    graphController : GraphController

    #loadGraph(newick : Newick)
}
class WelcomeController<GridPane> extends ViewController {
    -mainController : MainController
}
class OverlayController<GridPane> extends AbstractController
class SelectNewickController extends AbstractNewickController {
    -graphController : GraphController
}
class SubGraphController extends AbstractGraphController {
    stackGraph : StackGraph
    graphNode : GraphNode
}

'FXML
class base << (F,orange) FXML >> {
    + sources : Text
    + bases : Text
    + occurrences : Text
}
class graph << (F,orange) FXML >> {
    + progressIndicator : ProgressIndicator
    + sequences : Group
    + scroll : ScrollPane
}
class main << (F,orange) FXML >> {
    + view : StackPane
    + overlay : StackPane
    + menu : MenuBar
    + main : BorderPane
}
class newick << (F,orange) FXML >> {
    + newick : Group
    + progressIndicator : ProgressIndicator
}
class footer << (F,orange) FXML >> {
    + message : Text
}
class welcome << (F,orange) FXML >> {
    + load : Button
    + previous : ListView<Label>
}
class overlay << (F,orange) FXML >>

'Relations
BaseController "1" *-- "1" base
AbstractGraphController "1" *-- "1" graph
MainController "1" *-- "1" main
AbstractNewickController "1" *-- "1" newick
MessageController "1" *-- "1" footer
WelcomeController "1" *-- "1" welcome
OverlayController "1" *-- "1" overlay

App --> Window
App "1" *-- "1" MainController
MainController --> Window
MainController --> Breadcrumb
MainController o-- MenuController
MainController o-- MessageController
MainController o-- OverlayController
MainController --> WelcomeController

AbstractNewickController ..> DrawableEdge
AbstractNewickController ..> NewickLabel

AbstractGraphController ..> DrawableNodeLabel
AbstractGraphController ..> DrawableGraphNodeLabel
AbstractGraphController ..> DrawableEdge

DrawableNodeLabel ..> BaseLabel
DrawableNodeLabel --> BaseController

NewickController --> GraphController

MainController ..> Workspace

WelcomeController --> NewickController

GraphController --> SelectNewickController
GraphController --> SubGraphController

'External classes

abstract class javafx.application.Application {
    +start(stage : Stage)
}

interface javafx.fxml.Initializable {
    +initialize(location : URL, resources : ResourceBundle)
}
@enduml
